

CREATE COMPUTE MODULE HR_XML_Sync_Flow_Compute
	CREATE PROCEDURE IIB_POPULATE_HRSOURCE () LANGUAGE DATABASE DYNAMIC RESULT SETS 1 EXTERNAL NAME "dbo.IIB_POPULATE_HRSOURCE";
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		declare x int 1;
		
		declare ref reference to Environment;
		CALL IIB_POPULATE_HRSOURCE(Environment.ResultSet[]);
		if cardinality(Environment.ResultSet[]) > 0 then
			SET OutputRoot.XMLNS.Update.Data[] = Environment.ResultSet[];
		end if;
--		declare updatedRow ROW;
--		while x<=cardinality(Environment.ResultSet[])
--			do
--				SET updatedRow.rowData[x].PeopleId=Environment.ResultSet[x].PEOPLE_ID;
--				SET updatedRow.rowData[x].EmployeeId=Environment.ResultSet[x].EMPLOYEEID;
--				SET updatedRow.rowData[x].FirstName=Environment.ResultSet[x].FIRSTNAME;
--				SET updatedRow.rowData[x].LastName=Environment.ResultSet[x].LASTNAME;
--				SET updatedRow.rowData[x].FullCommonName=Environment.ResultSet[x].FULLCOMMONNAME;
--				SET updatedRow.rowData[x].JobTitle=Environment.ResultSet[x].JOBTITLE;
--				SET updatedRow.rowData[x].Company=Environment.ResultSet[x].COMPANY;
--				SET updatedRow.rowData[x].DeptCode=Environment.ResultSet[x].DEPTCODE;
--				SET updatedRow.rowData[x].OfficeName=Environment.ResultSet[x].OFFICE_NAME;
--				SET updatedRow.rowData[x].OfficeAddress1=Environment.ResultSet[x].OFFICE_ADDRESS1;
--				SET updatedRow.rowData[x].OfficeAddress2=Environment.ResultSet[x].OFFICE_ADDRESS2;
--				SET updatedRow.rowData[x].OfficeTownCity=Environment.ResultSet[x].OFFICE_TOWNCITY;
--				SET updatedRow.rowData[x].OfficeCountyState=Environment.ResultSet[x].OFFICE_COUNTYSTATE;
--				SET updatedRow.rowData[x].OfficePostZipCode=Environment.ResultSet[x].OFFICE_POSTZIPCODE;
--				SET updatedRow.rowData[x].OfficeCountry=Environment.ResultSet[x].OFFICE_COUNTRY;
--				SET updatedRow.rowData[x].OfficeFax=Environment.ResultSet[x].OFFICE_FAX;
--				SET updatedRow.rowData[x].ManagerEmployeeId=Environment.ResultSet[x].MANAGER_EMPLOYEEID;
--				SET updatedRow.rowData[x].WorkPhoneLIne=Environment.ResultSet[x].WORKTELEPHONE;
--				SET updatedRow.rowData[x].WorkExt=Environment.ResultSet[x].WORKEXT;
--				SET updatedRow.rowData[x].EmailPrimary=Environment.ResultSet[x].EMAILPRIMARY;
--				SET updatedRow.rowData[x].EupervisoEmployeeId=Environment.ResultSet[x].SUPERVISOR_EMPLOYEEID;
--				SET updatedRow.rowData[x].PersonalJobTitle=Environment.ResultSet[x].PERSONALJOBTITLE;
--				SET updatedRow.rowData[x].Designational=Environment.ResultSet[x].DESIGNATIONALL;
--				SET updatedRow.rowData[x].BusinessUnit=Environment.ResultSet[x].BUSINESSUNIT;
--				SET updatedRow.rowData[x].DepartmentName=Environment.ResultSet[x].DEPARTMENTNAME;
--				SET updatedRow.rowData[x].Username=Environment.ResultSet[x].USERNAME;
--				SET updatedRow.rowData[x].PersonalJobTitleBC=Environment.ResultSet[x].PERSONALJOBTITLEBC;
--				SET OutputRoot.JSON.Data.UpdatedRows = updatedRow;
--			set x=x+1;
--		end while;
--		SET OutputRoot.JSON.Data.UpdatedRows TYPE = JSON.Array;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
